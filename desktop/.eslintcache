[{"/Users/think/Github/projects/cxapp/desktop/src/context/TimerContext.js":"1","/Users/think/Github/projects/cxapp/desktop/src/components/CardTask.js":"2","/Users/think/Github/projects/cxapp/desktop/src/components/CardDocument.js":"3","/Users/think/Github/projects/cxapp/desktop/src/components/Textarea.js":"4","/Users/think/Github/projects/cxapp/desktop/src/components/CardDescription.js":"5","/Users/think/Github/projects/cxapp/desktop/src/utils/helpers.js":"6","/Users/think/Github/projects/cxapp/desktop/src/App.js":"7","/Users/think/Github/projects/cxapp/desktop/src/components/Login.js":"8","/Users/think/Github/projects/cxapp/desktop/src/components/index.js":"9","/Users/think/Github/projects/cxapp/desktop/src/components/Task.js":"10","/Users/think/Github/projects/cxapp/desktop/src/components/Project.js":"11","/Users/think/Github/projects/cxapp/desktop/src/components/Dashboard.js":"12","/Users/think/Github/projects/cxapp/desktop/src/components/CardMessageSend.js":"13","/Users/think/Github/projects/cxapp/desktop/src/components/FooterModal.js":"14","/Users/think/Github/projects/cxapp/desktop/src/components/CardSubTask.js":"15","/Users/think/Github/projects/cxapp/desktop/src/components/Timer.js":"16","/Users/think/Github/projects/cxapp/desktop/src/context/AppContext.js":"17","/Users/think/Github/projects/cxapp/desktop/src/components/CardProject.js":"18","/Users/think/Github/projects/cxapp/desktop/src/components/Header.js":"19","/Users/think/Github/projects/cxapp/desktop/src/components/CardMessage.js":"20","/Users/think/Github/projects/cxapp/desktop/src/components/TaskList.js":"21","/Users/think/Github/projects/cxapp/desktop/src/components/Documents.js":"22","/Users/think/Github/projects/cxapp/desktop/src/components/Footer.js":"23","/Users/think/Github/projects/cxapp/desktop/src/components/Logout.js":"24","/Users/think/Github/projects/cxapp/desktop/src/pages/Settings.js":"25","/Users/think/Github/projects/cxapp/desktop/src/components/ModalMessage.js":"26","/Users/think/Github/projects/cxapp/desktop/src/context/AuthContext.js":"27","/Users/think/Github/projects/cxapp/desktop/src/api/Task.js":"28","/Users/think/Github/projects/cxapp/desktop/src/components/Dropdown.js":"29","/Users/think/Github/projects/cxapp/desktop/src/index.js":"30","/Users/think/Github/projects/cxapp/desktop/src/components/Settings.js":"31","/Users/think/Github/projects/cxapp/desktop/src/components/SettingsAccount.js":"32","/Users/think/Github/projects/cxapp/desktop/src/components/SettingsClients.js":"33"},{"size":1409,"mtime":1607950198968,"results":"34","hashOfConfig":"35"},{"size":1806,"mtime":1608050551921,"results":"36","hashOfConfig":"35"},{"size":846,"mtime":1607725088584,"results":"37","hashOfConfig":"35"},{"size":618,"mtime":1607614496400,"results":"38","hashOfConfig":"35"},{"size":661,"mtime":1607614496393,"results":"39","hashOfConfig":"35"},{"size":629,"mtime":1607614496407,"results":"40","hashOfConfig":"35"},{"size":1527,"mtime":1608113928920,"results":"41","hashOfConfig":"35"},{"size":5077,"mtime":1607932759928,"results":"42","hashOfConfig":"35"},{"size":1269,"mtime":1608115959513,"results":"43","hashOfConfig":"35"},{"size":14557,"mtime":1608048146511,"results":"44","hashOfConfig":"35"},{"size":8588,"mtime":1608111902099,"results":"45","hashOfConfig":"35"},{"size":4913,"mtime":1608111680850,"results":"46","hashOfConfig":"35"},{"size":798,"mtime":1607722252031,"results":"47","hashOfConfig":"35"},{"size":752,"mtime":1608047470811,"results":"48","hashOfConfig":"35"},{"size":1378,"mtime":1607949593073,"results":"49","hashOfConfig":"35"},{"size":3058,"mtime":1607943698853,"results":"50","hashOfConfig":"35"},{"size":533,"mtime":1607693699410,"results":"51","hashOfConfig":"35"},{"size":1142,"mtime":1608042752940,"results":"52","hashOfConfig":"35"},{"size":499,"mtime":1607701923176,"results":"53","hashOfConfig":"35"},{"size":832,"mtime":1607962642747,"results":"54","hashOfConfig":"35"},{"size":1810,"mtime":1608048686256,"results":"55","hashOfConfig":"35"},{"size":1752,"mtime":1607956209346,"results":"56","hashOfConfig":"35"},{"size":204,"mtime":1607614496397,"results":"57","hashOfConfig":"35"},{"size":996,"mtime":1607614496399,"results":"58","hashOfConfig":"35"},{"size":2233,"mtime":1608113561810,"results":"59","hashOfConfig":"35"},{"size":850,"mtime":1607959146270,"results":"60","hashOfConfig":"35"},{"size":429,"mtime":1607279663956,"results":"61","hashOfConfig":"35"},{"size":1232,"mtime":1608032073170,"results":"62","hashOfConfig":"35"},{"size":735,"mtime":1608040007173,"results":"63","hashOfConfig":"35"},{"size":1123,"mtime":1608112834367,"results":"64","hashOfConfig":"35"},{"size":2011,"mtime":1608116366171,"results":"65","hashOfConfig":"35"},{"size":3403,"mtime":1608116324441,"results":"66","hashOfConfig":"35"},{"size":3585,"mtime":1608116240050,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7exexi",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":9,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/think/Github/projects/cxapp/desktop/src/context/TimerContext.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/CardTask.js",["140"],"/Users/think/Github/projects/cxapp/desktop/src/components/CardDocument.js",["141"],"/Users/think/Github/projects/cxapp/desktop/src/components/Textarea.js",[],["142","143"],"/Users/think/Github/projects/cxapp/desktop/src/components/CardDescription.js",[],"/Users/think/Github/projects/cxapp/desktop/src/utils/helpers.js",[],"/Users/think/Github/projects/cxapp/desktop/src/App.js",["144","145","146","147"],"/Users/think/Github/projects/cxapp/desktop/src/components/Login.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/index.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/Task.js",["148","149","150","151","152","153","154","155","156","157","158"],"import {useEffect, useState, useRef, useContext} from \"react\";\n\nimport { AuthContext } from '../context/AuthContext';\nimport { AppContext } from '../context/AppContext';\nimport { TimerContext } from '../context/TimerContext';\n\nimport { taskTotalTime } from '../utils/helpers';\n\nimport { Header, CardSubTask, CardMessage, Documents, Textarea, CardMessageSend, FooterModal, Footer, ModalMessage, Dropdown } from '../components';\n\n// console.log(Notification);\n\n// const { Menu, MenuItem, Notification } = window.remote;\n\nconst { Menu, MenuItem } = window.remote;\n\nconst Task = () => {\n\n  const auth = useContext(AuthContext);\n  const app = useContext(AppContext);\n  const timer = useContext(TimerContext);\n\n  const token = auth.token;\n\n\n  const [task, setTask] = useState([]);\n  const [taskStatus, setTaskStatus] = useState();\n  const [messages, setMessages] = useState([]);\n  const [subTasks, setSubTasks] = useState([]);\n  const [modalMessage, setModalMessage] = useState(false);\n  const [modalMessageCallback, setModalStateCallback] = useState(null);\n  const [messageRead, setMessageRead] = useState(0);\n  const [isReview, setIsReview] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [modalState, setModalState] = useState(false);\n  const [dropdownStatus, setDropdownStatus] = useState(false);\n\n\n  const messagesRef = useRef(messages);\n  messagesRef.current = messages;\n\n  const subTasksRef = useRef(subTasks);\n  subTasksRef.current = subTasks;\n\n  const _getTask = () => {\n    if(!token) return;\n    fetch(`${app.api}/api/tasks/${app.task}`, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      }\n    })\n    .then((response) => response.json())\n    .then((json) => {\n      setTask(json)\n      setTaskStatus(json.status)\n    })\n    .catch((error) => console.error(error))\n    .finally(() => setLoading(false))\n  }\n\n  const _getMessages = (status) => {\n    if(!token) return;\n    fetch(`${app.api}/api/messages/${app.task}/${status}`, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      }\n    })\n    .then((response) => response.json())\n    .then((json) => setMessages(json))\n    .catch((error) => console.error(error))\n    .finally(() => setLoading(false))\n  }\n\n  const _getSubTasks = (taskId) => {\n    if(!token) return;\n    fetch(`${app.api}/api/subtasks/${app.task}`, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      }\n    })\n    .then((response) => response.json())\n    .then((json) => setSubTasks(json))\n    .catch((error) => console.error(error))\n    .finally(() => setLoading(false))\n  }\n\n  const _createMessage = ( data ) => {\n    if(!token) return;\n    fetch(`${app.api}/api/messages`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      },\n      body: JSON.stringify({\n        message: data,\n        task: app.task\n      })\n    })\n    .then((response) =>  _getMessages(messageRead))\n    .catch((error) => console.error(error))\n    .finally(() => setLoading(false))\n  }\n\n\n  const _deleteMessage = ( id ) => {\n    if(!token) return;\n    fetch(`${app.api}/api/messages/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      },\n    })\n    .catch((error) => console.error(error))\n  }\n\n  const _updateTask = () => {\n    if(!token) return;\n    fetch(`${app.api}/api/tasks/${app.task}`, {\n      method: \"PATCH\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      },\n      body: JSON.stringify({task})\n    })\n    .then((response) => response.json())\n    .catch((error) => console.error(error))\n    .finally(() => setLoading(false))\n  }\n\n  const _updateSubTask = (subtask) => {\n    if(!token) return;\n    fetch(`${app.api}/api/subtasks/${subtask.id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      },\n      body: JSON.stringify({\n          subtask\n        })\n    })\n    .catch((error) => console.error(error))\n  }\n\n\n  const _createSubTask = (selection) => {\n    if(!token) return;\n    fetch(`${app.api}/api/subtasks/${app.task}`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      },\n      body: JSON.stringify({name: selection})\n    })\n    .then((json) => _getSubTasks())\n    .catch((error) => console.error(error))\n    .finally(() => setModalState(false))\n  }\n\n\n  const _deleteSubTask = (subTaskId) => {\n    if(!token) return;\n    fetch(`${app.api}/api/subtasks/${subTaskId}`, {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      }\n    })\n    .catch((error) => console.error(error))\n  }\n\n\n  const _deleteDocument = (id) => {\n    if(!token) return;\n    fetch(`${app.api}/api/documents/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'authorization': token,\n      },\n    })\n    .then((response) => _getTask())\n    .catch((error) => console.error(error))\n  }\n\n  const updateName = (data) => {\n    if(task.name !== data) {\n      task.name = data;\n      _updateTask()\n    }\n  }\n\n\n  const _storeDocuments = (documents) => {\n    if(!token) return;\n    const formData = new FormData();\n\n    for (var i = 0; i < documents.length; i++) {\n      formData.append('documents[]', documents[i], documents[i].name);\n    }\n\n    formData.append('authorization', token);\n    formData.append('_method', 'put');\n\n    fetch(`${app.api}/api/documents/${app.task}`, {\n      method: \"POST\",\n      body: formData\n    })\n    .then((response) => _getTask())\n    .catch((error) => console.error(error))\n    .finally(() => setModalState(false))\n  }\n\n  \n  const updateDescription = (data) => {\n    if(task.description !== data) {\n      task.description = data;\n      _updateTask()\n    }\n  }\n\n  const updateSubTask = (id, data) => {\n\n    let item = subTasks.filter(item => item.id === id)[0];\n\n    if (typeof data === \"boolean\"){\n      (data)\n      ? item.status = '0'\n      : item.status = '1';\n      _updateSubTask(item)\n    }\n\n    if (typeof data === \"string\"){\n      if(item.name !== data) {\n        item.name = data;\n        _updateSubTask(item)\n      }\n    }\n  }\n\n  const removeSubTask = (id) => {\n    // setModalMessage('Will be delete in 5s');\n    _deleteSubTask(id)\n    const filteredSubTasks = subTasksRef.current.filter(item => item.id !== parseInt(id))\n    setSubTasks(filteredSubTasks)\n  }\n\n  const storeMessage = ( data ) => {\n    _createMessage(data)\n  }\n\n  const removeMessage = (id) => {\n    _deleteMessage(id)\n\n    const filteredMessages = messagesRef.current.filter(item => item.id !== parseInt(id))\n    setMessages(filteredMessages)\n  }\n\n  const updateTasks = () => {\n    _getTask()\n  }\n\n  const updateReview = () => {\n    setIsReview(!isReview)\n    if(isReview) {\n      task.is_review = '0'\n    } else {\n      task.is_review = '1';\n    }\n    _updateTask()\n  };\n\n  \n  const updateStatus = (status) => {\n    if(task.status !== status) {\n      task.status = status;\n      setTaskStatus(status)\n      _updateTask();\n    }\n  }\n\n\n  console.log('render');\n\n  const contextMenu = () => {\n    window.addEventListener('contextmenu', (e) => {\n       const menu = new Menu();\n       if (e.target.dataset.subtask) {\n         menu.append(new MenuItem({\n           label: \"Delete Subtask\",\n           click: () => {\n             removeSubTask(e.target.dataset.id)\n           }\n         }));\n       }\n       if (e.target.dataset.document) {\n         // console.log(new MenuItem());\n         menu.append(new MenuItem({\n           label: \"Delete Attachment\",\n           click: () => {\n             _deleteDocument(e.target.dataset.id)\n           }\n         }))\n       }\n       if (e.target.dataset.message) {\n         let selection = window.getSelection()\n         menu.append(new MenuItem({\n           label: \"Create Subtask\",\n           click: () => {\n             _createSubTask(selection.toString())\n           }\n         }));\n         menu.append(new MenuItem({\n           type: \"separator\",\n         }));\n         menu.append(new MenuItem({\n           label: \"Delete Message\",\n           click: () => {\n             removeMessage(e.target.dataset.id)\n           }\n         }));\n       }\n       menu.popup({ window: window.remote.getCurrentWindow() })\n     }, false)\n  }\n\n\n  useEffect(() => {\n    _getTask();\n    _getSubTasks();\n    contextMenu();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  useEffect(() => {\n    _getMessages(messageRead);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messageRead]);\n\n\n  useEffect(() => {\n    task.is_review === '1' && setIsReview(true);\n  }, [task]);\n\n\n  return (\n    <>\n\n    {loading\n      ? <p></p>\n      : (\n        <>\n\n      <Header\n        back={app.setTask}\n      />\n\n      <article className=\"main container\">\n\n      <ul>\n        <li>\n          <div className=\"card-text-wrapper\">\n            <div className=\"card-title-wrapper\">\n\n            <Textarea\n              data={task.name}\n              callback={updateName}\n            />\n\n            {timer.time.id !== task.id && task.status === 'In Progress' &&\n\n              <button\n                className=\"btn btn--icon\"\n                onClick={() => timer.startTimer(task.id, task.name)}\n              >\n                <svg viewBox=\"0 0 100 100\" className=\"ic-svg s10\"> \n                  <use xlinkHref=\"/assets/sprite.svg#play\"></use>\n                </svg>\n              </button>\n\n            }\n\n            {taskStatus === 'In Progress' &&\n            <>\n\n            <button\n              className=\"btn btn--small mr2\"\n            >\n              {taskTotalTime(task.time)}\n            </button>\n\n            <span className=\"checkbox-status-container\">\n\n              <input\n                type=\"checkbox\"\n                value={task.is_review}\n                checked={isReview}\n                onChange={() => updateReview()}\n              />\n\n              <span className=\"checkmark-container\">\n                <svg viewBox=\"0 0 100 100\" className=\"ic-svg s16\"> \n                  <use xlinkHref=\"/assets/sprite.svg#review\"></use>\n                </svg>\n              </span>\n\n            </span>\n          </>\n          }\n          </div>\n\n          {/* <div className=\"dropdown-wrapper pt1\">\n\n           <button \n              className=\"btn btn--status\"\n              onClick={() => setDropdownStatus(!dropdownStatus)}\n              >\n              {taskStatus}\n            </button>\n\n            <Dropdown\n              setDropdownState={setDropdownStatus}\n              dropdownState={dropdownStatus}\n            >\n              <button \n                onClick={() => updateStatus('In Progress')}\n                className=\"btn btn--none\">\n                In Progress\n              </button>\n              <button \n                onClick={() => updateStatus('Completed')}\n                className=\"btn btn--none\">\n                Completed\n              </button>\n              <button \n                onClick={() => updateStatus('Not Started')}\n                className=\"btn btn--none\">\n                Not Started\n              </button>\n            </Dropdown>\n    \n            \n          </div> */}\n\n        </div>\n\n        </li>\n      </ul>\n\n\n\n      {isReview &&\n        <ul>\n          <div className=\"title-wrapper\">\n            <span className=\"label\">Requests</span>\n            {(messageRead === 0)\n              ? <button\n                  className=\"btn btn--small\"\n                  onClick={() => {setMessageRead(1)}}\n                  >\n                Show All ({task.message_count})</button>\n              : <button\n                  className=\"btn btn--small\"\n                  onClick={() => {setMessageRead(0)}}\n                  >\n                Hide</button>\n            }\n          </div>\n\n          {messages.length > 0 &&\n            messages.map((item, index) =>\n              <li\n                key={index}\n              >\n                <CardMessage\n                  key={index}\n                  data={item}\n                />\n              </li>\n            )\n          }\n          {/* <CardMessageSend\n            callback={storeMessage}\n          />  */}\n        </ul>\n      }\n\n\n      { subTasks.length > 0 &&\n        <ul>\n        <span className=\"label pb2\">Sub Tasks</span>\n          {subTasks.map((item, index) =>\n            <li\n              key={index}\n            >\n              <CardSubTask\n                key={index}\n                data={item}\n                callback={updateSubTask}\n              />\n            </li>\n          )}\n        </ul>\n      }\n\n\n      <ul>\n        <span className=\"label pb2\">Description</span>\n        <li\n        >\n          <Textarea\n            data={task.description}\n            callback={updateDescription}\n          />\n        </li>\n      </ul>\n\n\n      <Documents\n        data={task}\n        callback={updateTasks}\n      />\n\n\n      </article>\n\n      {/* <ModalMessage\n        data={modalMessage}\n        callback={setModalStateCallback}\n      /> */}\n\n      <FooterModal\n        setModalState={setModalState}\n        modalState={modalState}\n      >\n          <button\n            className=\"btn btn--secondary\"\n            onClick={() => _createSubTask()}\n          >Add Task</button>\n          <button\n            className=\"btn btn--secondary btn--upload\">\n            <input \n              type=\"file\"  \n              onChange={(event) => _storeDocuments(event.target.files)}\n              multiple\n            />  \n          Upload File</button>\n      </FooterModal>\n\n      <Footer>\n        <button\n          className=\"btn btn--icon\"\n          onClick={() => setModalState(!modalState)}>\n            <svg viewBox=\"0 0 100 100\" className=\"ic-svg s16\"> \n              <use xlinkHref=\"/assets/sprite.svg#more\"></use>\n            </svg>\n        </button>\n      </Footer>\n\n      </>\n    )}\n      </>\n    )\n  }\n\nexport default Task\n",["159","160"],"/Users/think/Github/projects/cxapp/desktop/src/components/Project.js",["161"],"/Users/think/Github/projects/cxapp/desktop/src/components/Dashboard.js",["162"],"/Users/think/Github/projects/cxapp/desktop/src/components/CardMessageSend.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/FooterModal.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/CardSubTask.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/Timer.js",["163"],"/Users/think/Github/projects/cxapp/desktop/src/context/AppContext.js",[],["164","165"],"/Users/think/Github/projects/cxapp/desktop/src/components/CardProject.js",["166"],"import {useContext} from 'react';\n\nimport { AppContext } from '../context/AppContext';\n\nconst CardProject = ( { data }) => {\n  \n  const app = useContext(AppContext);\n\n  return (\n\n    <>\n\n      <a \n        data-project \n        data-id={data.id}\n        onClick={() => app.setProject(data.id)}\n      >\n          <svg viewBox=\"0 0 100 100\" className=\"ic-svg mr3 s16\"> \n            <use xlinkHref=\"/assets/sprite.svg#folder\"></use>\n          </svg>\n        <div className=\"card-text-wrapper\">\n\n          <div className=\"card-title-wrapper\">\n  \n            <h2>{data.name}</h2>\n            <div className=\"card-icon-wrapper\">\n              {data.is_sync === '1' &&\n                <svg viewBox=\"0 0 100 100\" className=\"ic-svg svg--brand s16\"> \n                  <use xlinkHref=\"/assets/sprite.svg#sync\"></use>\n                </svg>\n              }\n            </div>\n          </div>\n          {(data.client !== null && data.client !== undefined)\n            ? <span className=\"info\">{data.client.name}</span>\n            : <span className=\"info\">Personal</span>\n          }\n        </div>\n\n      </a>\n    </>\n\n  )\n}\n\nexport default CardProject\n","/Users/think/Github/projects/cxapp/desktop/src/components/Header.js",[],["167","168"],"/Users/think/Github/projects/cxapp/desktop/src/components/CardMessage.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/TaskList.js",["169","170","171","172"],"/Users/think/Github/projects/cxapp/desktop/src/components/Documents.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/Footer.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/Logout.js",[],"/Users/think/Github/projects/cxapp/desktop/src/pages/Settings.js",["173"],"/Users/think/Github/projects/cxapp/desktop/src/components/ModalMessage.js",["174","175"],"/Users/think/Github/projects/cxapp/desktop/src/context/AuthContext.js",[],"/Users/think/Github/projects/cxapp/desktop/src/api/Task.js",["176","177","178","179","180","181","182","183","184"],"/Users/think/Github/projects/cxapp/desktop/src/components/Dropdown.js",[],"/Users/think/Github/projects/cxapp/desktop/src/index.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/Settings.js",["185"],"/Users/think/Github/projects/cxapp/desktop/src/components/SettingsAccount.js",[],"/Users/think/Github/projects/cxapp/desktop/src/components/SettingsClients.js",[],{"ruleId":"186","severity":1,"message":"187","line":22,"column":7,"nodeType":"188","endLine":29,"endColumn":8},{"ruleId":"186","severity":1,"message":"187","line":11,"column":5,"nodeType":"188","endLine":11,"endColumn":40},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":3,"column":17,"nodeType":"195","messageId":"196","endLine":3,"endColumn":26},{"ruleId":"193","severity":1,"message":"197","line":3,"column":28,"nodeType":"195","messageId":"196","endLine":3,"endColumn":35},{"ruleId":"193","severity":1,"message":"198","line":3,"column":47,"nodeType":"195","messageId":"196","endLine":3,"endColumn":51},{"ruleId":"193","severity":1,"message":"199","line":3,"column":53,"nodeType":"195","messageId":"196","endLine":3,"endColumn":58},{"ruleId":"193","severity":1,"message":"200","line":9,"column":65,"nodeType":"195","messageId":"196","endLine":9,"endColumn":80},{"ruleId":"193","severity":1,"message":"201","line":9,"column":103,"nodeType":"195","messageId":"196","endLine":9,"endColumn":115},{"ruleId":"193","severity":1,"message":"202","line":9,"column":117,"nodeType":"195","messageId":"196","endLine":9,"endColumn":125},{"ruleId":"193","severity":1,"message":"203","line":30,"column":10,"nodeType":"195","messageId":"196","endLine":30,"endColumn":22},{"ruleId":"193","severity":1,"message":"204","line":30,"column":24,"nodeType":"195","messageId":"196","endLine":30,"endColumn":39},{"ruleId":"193","severity":1,"message":"205","line":31,"column":10,"nodeType":"195","messageId":"196","endLine":31,"endColumn":30},{"ruleId":"193","severity":1,"message":"206","line":31,"column":32,"nodeType":"195","messageId":"196","endLine":31,"endColumn":53},{"ruleId":"193","severity":1,"message":"207","line":36,"column":10,"nodeType":"195","messageId":"196","endLine":36,"endColumn":24},{"ruleId":"193","severity":1,"message":"208","line":36,"column":26,"nodeType":"195","messageId":"196","endLine":36,"endColumn":43},{"ruleId":"193","severity":1,"message":"209","line":269,"column":9,"nodeType":"195","messageId":"196","endLine":269,"endColumn":21},{"ruleId":"193","severity":1,"message":"210","line":295,"column":9,"nodeType":"195","messageId":"196","endLine":295,"endColumn":21},{"ruleId":"189","replacedBy":"211"},{"ruleId":"191","replacedBy":"212"},{"ruleId":"193","severity":1,"message":"213","line":5,"column":28,"nodeType":"195","messageId":"196","endLine":5,"endColumn":36},{"ruleId":"193","severity":1,"message":"214","line":6,"column":18,"nodeType":"195","messageId":"196","endLine":6,"endColumn":24},{"ruleId":"193","severity":1,"message":"215","line":57,"column":9,"nodeType":"195","messageId":"196","endLine":57,"endColumn":18},{"ruleId":"189","replacedBy":"216"},{"ruleId":"191","replacedBy":"217"},{"ruleId":"186","severity":1,"message":"187","line":13,"column":7,"nodeType":"188","endLine":17,"endColumn":8},{"ruleId":"189","replacedBy":"218"},{"ruleId":"191","replacedBy":"219"},{"ruleId":"193","severity":1,"message":"220","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":20},{"ruleId":"193","severity":1,"message":"221","line":1,"column":22,"nodeType":"195","messageId":"196","endLine":1,"endColumn":30},{"ruleId":"193","severity":1,"message":"222","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":20},{"ruleId":"193","severity":1,"message":"223","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":21},{"ruleId":"193","severity":1,"message":"224","line":9,"column":7,"nodeType":"195","messageId":"196","endLine":9,"endColumn":12},{"ruleId":"193","severity":1,"message":"225","line":5,"column":9,"nodeType":"195","messageId":"196","endLine":5,"endColumn":13},{"ruleId":"226","severity":1,"message":"227","line":18,"column":13,"nodeType":"228","endLine":25,"endColumn":13},{"ruleId":"229","severity":2,"message":"230","line":9,"column":16,"nodeType":"195","endLine":9,"endColumn":26},{"ruleId":"229","severity":2,"message":"230","line":10,"column":15,"nodeType":"195","endLine":10,"endColumn":25},{"ruleId":"229","severity":2,"message":"231","line":15,"column":27,"nodeType":"195","endLine":15,"endColumn":35},{"ruleId":"229","severity":2,"message":"231","line":16,"column":33,"nodeType":"195","endLine":16,"endColumn":41},{"ruleId":"229","severity":2,"message":"231","line":17,"column":29,"nodeType":"195","endLine":17,"endColumn":37},{"ruleId":"232","severity":2,"message":"233","line":25,"column":32,"nodeType":"195","messageId":"234","endLine":25,"endColumn":36},{"ruleId":"232","severity":2,"message":"235","line":54,"column":1,"nodeType":"195","messageId":"234","endLine":54,"endColumn":10},{"ruleId":"229","severity":2,"message":"236","line":54,"column":1,"nodeType":"195","endLine":54,"endColumn":10},{"ruleId":"232","severity":2,"message":"237","line":58,"column":13,"nodeType":"195","messageId":"234","endLine":58,"endColumn":16},{"ruleId":"193","severity":1,"message":"220","line":1,"column":20,"nodeType":"195","messageId":"196","endLine":1,"endColumn":30},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Project' is defined but never used.","'Task' is defined but never used.","'Timer' is defined but never used.","'CardMessageSend' is defined but never used.","'ModalMessage' is defined but never used.","'Dropdown' is defined but never used.","'modalMessage' is assigned a value but never used.","'setModalMessage' is assigned a value but never used.","'modalMessageCallback' is assigned a value but never used.","'setModalStateCallback' is assigned a value but never used.","'dropdownStatus' is assigned a value but never used.","'setDropdownStatus' is assigned a value but never used.","'storeMessage' is assigned a value but never used.","'updateStatus' is assigned a value but never used.",["238"],["239"],"'CardTask' is defined but never used.","'Logout' is defined but never used.","'parseTime' is assigned a value but never used.",["238"],["239"],["238"],["239"],"'useContext' is defined but never used.","'useState' is defined but never used.","'AppContext' is defined but never used.","'AuthContext' is defined but never used.","'token' is assigned a value but never used.","'node' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","react-hooks/rules-of-hooks","React Hook \"useContext\" is called in function \"fetchApi\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useState\" is called in function \"fetchApi\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'task' is not defined.","undef","'useEffect' is not defined.","React Hook \"useEffect\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","'app' is not defined.","no-global-assign","no-unsafe-negation"]